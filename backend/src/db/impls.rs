//! This module is used for implementing things on types generated by prisma-cli
//! in the [`prisma`] module
//!
//! [`prisma`]: crate::db::prisma

use crate::db::prisma::Category;
use rocket::request::FromParam;

impl Category {
    pub const ALL: [Category; 4] = [
        Category::Islamism,
        Category::Modernity,
        Category::Secularism,
        Category::Feminism,
    ];
}

impl<'a> FromParam<'a> for Category {
    type Error = strum::ParseError;

    fn from_param(param: &'a str) -> Result<Self, Self::Error> {
        Ok(match param.to_uppercase().as_str() {
            "ISLAMISM" => Self::Islamism,
            "MODERNITY" => Self::Modernity,
            "SECULARISM" => Self::Secularism,
            "FEMINISM" => Self::Feminism,
            _ => return Err(strum::ParseError::VariantNotFound),
        })
    }
}
